<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article id="proposal">
  <articleinfo>
    <title>JAG SourceForge Release Manual</title>

    <author>
      <firstname>Rudie</firstname>

      <surname>Ekkelenkamp</surname>

      <affiliation>
        <orgname>Finalist IT Group</orgname>

        <address>
               <street>Stationsplein 45</street>,
               <postcode>3013 AK </postcode>
               <city>Rotterdam</city>,
               <country>The Netherlands</country>,
               Phone:
               <phone>+31 10 217 08 00</phone>,
               Fax:
               <fax>+31 10 280 96 20</fax>,
               Email:
               <email>rudie@finalist.com</email>
            </address>
      </affiliation>
    </author>

    <date>March 13, 2004</date>

    <revhistory>
      <revision>
        <revnumber>v0.1</revnumber>

        <date>March 13, 2004</date>

        <authorinitials>Rudie Ekkelenkamp</authorinitials>

        <revdescription>
          <para>Initial version on how to release the JAG application and
          modules</para>
        </revdescription>
      </revision>
    </revhistory>
  </articleinfo>

  <section id="introduction">
    <title>Introduction</title>

    <para>JAG (Java Application Generator) is an Open Source project hosted at
    <ulink url="http://jag.sourceforge.net">http://jag.sourceforge.net</ulink>.
    JAG consists of the JAG Application and JAG modules needed by the JAG
    generated applications. Both the JAG Application and the JAG modules are
    maintained at sourceforge.</para>

    <para>This Manual describes the steps required for a JAG release manager
    to create a JAG release, update the JAG website documentation and
    developers documentation. Part of the manual is still in Dutch.</para>
  </section>

  <section>
    <title>Using Sourceforge with putty and WinCVS</title>

    <section>
      <title>Configure Putty</title>

      <para>This section will describe how to access sourceforge using the
      Putty ssh client.</para>

      <para>First download and install Putty (The comple zip version with all
      tools like: plink, pageant, putty etc..).</para>

      <para>First you should use Putty to create a private key and publish
      your public key on sourceforge site.</para>

      <para>With putty a a profile should be defined for jag.sourceforge.net
      and pageant should be used to load your private key whenever you access
      JAG on SourceForge using SSH. Make sure you set the preferred SSH version
      to 1</para>

      <para>With putty a private key can be created using: RSA (SSH1) key, 128
      bits. (This is the default). Upload the public key to sourceforge
      (http://sourceforge.net/account/editsshkeys.php)</para>

      <para>Create a bat file: ssh_cvs.bat c:/apps/putty/plink -ssh -1 -i
      c:\apps\putty\identity.ppk %1 %2 %3 %4 %5</para>

      <para>Make sure the -i optie points to your private key created with
      putty.</para>
    </section>

    <section>
      <title>Using WinCVS over SSH</title>

      <para>Oncy putty has been configured, SourceForge CVS over SSH can be
      used with WinCVS.</para>

      <para>Install:</para>

      <para>- WinCVS: WinCvs13b13-2.zip -</para>

      <para>In WinCVS preferences: Authentication: ssh</para>

      <para>Path: /cvsroot/jag Host: cvs.sourceforge.net</para>

      <para>User: ekkelenkamp (Should be your sourceforge account name).</para>

      <para>CVSRoot should be: ekkelenkamp@jag.cvs.sourceforge.net:/cvsroot/jag</para>

      <para>SSH settings: Select a SSH client; make it point to the bat file:
      c:/apps/putty/ssh_cvs.bat</para>

      <para>Test using plink if you can login : plink
      ekkelenkamp@jag.sourceforge.net . This should succeed without entering
      any password.</para>

      <para>Now you can checkout jag. Make sure you don&#39;t checkout over an
      existing CVS tree that was checkoud as guest. That will give problems.</para>
    </section>
  </section>

  <section>
    <title>Releasing JAG</title>

    <section>
      <title>Introduction</title>

      <para>Using a script file for making a JAG release:</para>

      <para>1) First make sure alle sources are checked in and up-to-date and
      create a tag called JAG_vX_X_X. For example: JAG_v1_3</para>

      <para>2} Maven is used to create a distribution. Use maven dist to create
      both a source and binary distribution</para>

      <para>3) On the SourceForge website, go to &#39;File Releases&#39; in
      &#39;Admin&#39; and make a new release &#39;jag_vX-Y-Z&#39; from the
      &#39;stable&#39; branch. Enter the release and change notes (You can use
      the notes from a previous release as the base).</para>

      <para>6) Use ftp to upload the two zip files to: upload.sourceforge.net
      : login anonymous (Just use enter as the password) - &#39;put&#39; de
      two zip files into de &#39;incoming&#39; map (Don&#39;t forget to use
      binary mode: &#34;bin&#34; )</para>

      <para>7) Back to the SourceForge website: refresh the page to be able to
      select the zip files - After selection of a zip file,
      select the following options: platform-independent, zip, (no-)sources.</para>

      <para>8) Also make a news release (Also using the SourceForge website),
      and also the jag.sf.net websites &#39;news&#39; page.</para>
    </section>
  </section>

  <section>
    <title>Releasing JAG Modules</title>

    <para>For most modules that can be built with Maven, the j2ee.jar should
    be available in the local repository. Put it in the download/jars/j2ee.jar
    . For some modules also the oracle driver is needed. This driver should
    also be stored in the local repository at download/jars/classes12.jar
    Build a new distribution with maven jar Build a website using: maven site</para>

    <para>Every JAG module has a maven project file frrom which the module can
    be built. To build a module, use the first command and to deploy the jar
    to the JAG website, use the second command:</para>

    <para><computeroutput>maven -Dmaven.username=ekkelenkamp jar</computeroutput></para>

    <para><computeroutput>maven -Dmaven.username=ekkelenkamp jar:deploy</computeroutput></para>


   <para>Updating the site documentation can be done using a simple command.
    The first command shows how to build a site
    for a JAG module, the second command shows how to deploy the site to JAG
    (it will actually be deployed to:
    http://jag.sourceforge.net/download/jag/maven/modulename/).</para>

    <para><computeroutput>maven -Dmaven.username=ekkelenkamp site</computeroutput></para>

    <para><computeroutput>maven -Dmaven.username=ekkelenkamp site:deploy</computeroutput></para>

    <para>The only exception is the sequence-generator module that needs to be
    built with ANT (because it generates an EJB and depends on XDoclet).</para>
  </section>

  <appendix id="references">
    <title>References</title>

    <para><itemizedlist><listitem><para>JAG Homepage: <ulink
    url="http://jag.sourceforge.net">http://jag.sourceforge.net</ulink></para></listitem><listitem><para>JAG
    Developers docs: <ulink url="http://jag.sourceforge.net/maven/jag/">http://jag.sourceforge.net/maven/jag/</ulink></para></listitem></itemizedlist></para>
  </appendix>
</article>