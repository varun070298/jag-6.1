<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article id="sunone">
  <articleinfo>
    <title>SUN One Application Server 7 Support with JAG</title>

    <author>
      <firstname>Rudie</firstname>

      <surname>Ekkelenkamp</surname>

      <affiliation>
        <orgname>Finalist IT Group</orgname>

        <address>
               <street>Stationsplein 45</street>,
               <postcode>3013 AK </postcode>
               <city>Rotterdam</city>,
               <country>The Netherlands</country>,
               Phone:
               <phone>+31 10 217 08 00</phone>,
               Fax:
               <fax>+31 10 280 96 20</fax>,
               Email:
               <email>rudie@finalist.com</email>
            </address>
      </affiliation>
    </author>

    <date>May 04, 2004</date>

    <revhistory>
      <revision>
        <revnumber>v0.1</revnumber>

        <date>May 04, 2004</date>

        <authorinitials>Rudie Ekkelenkamp</authorinitials>

        <revdescription>
          <para>Initial version on how to use The Sun ONE Application Server 7
          with JAG.</para>
        </revdescription>
      </revision>
    </revhistory>
  </articleinfo>

  <section>
    <title>Sun ONE Application Server 7</title>

    <section>
      <title>Introduction</title>

      <para>As of JAG 3.3 initial support for the Sun ONE Application Server 7
      has been added. CMP With Container Managed Relations have been tested on
      a MySQL database.</para>
    </section>

    <section>
      <title>Setting up a mysql database</title>

      <para>To use the Sun ONE Application Server 7 with JAG a small example
      will be described using a mysql database. Use the following instructions
      to setup a mysql database for this Example. Create a "test" database and
      run the following sql scripts:</para>

      <para><computeroutput>mysql use test</computeroutput></para>

      <para><computeroutput>drop table song; </computeroutput></para>

      <para><computeroutput>drop table cd; </computeroutput></para>

      <para><computeroutput>drop table pktest; </computeroutput></para>

      <para><computeroutput>CREATE TABLE CD ( CD_ID INT NOT NULL, CD_TITLE
      TEXT, INDEX (CD_ID), PRIMARY KEY (CD_ID)) TYPE = INNODB;
      </computeroutput></para>

      <para><computeroutput>CREATE TABLE SONG (SONG_ID INT NOT NULL, CD_ID
      INT, SONG_NAME TEXT, INDEX CD_IND (CD_ID), PRIMARY KEY (SONG_ID),
      FOREIGN KEY (CD_ID) REFERENCES CD(CD_ID) ON DELETE CASCADE) TYPE=INNODB;
      </computeroutput></para>

    <para><computeroutput>
    CREATE TABLE PKTEST (SONG_ID INT NOT NULL, CD_ID INT NOT NULL, INDEX CD_IND1 (CD_ID), INDEX SONG_IND1 (SONG_ID), PRIMARY KEY (SONG_ID, CD_ID), FOREIGN KEY (SONG_ID)  REFERENCES SONG(SONG_ID),
    FOREIGN KEY (CD_ID) REFERENCES CD(CD_ID) ON DELETE CASCADE) TYPE=INNODB;
    </computeroutput></para>

      <para><computeroutput>insert into CD (CD_ID, CD_TITLE) values (10000000,
      'my cd title'); </computeroutput></para>

      <para><computeroutput>insert into SONG values (20000000, 10000000, 'my
      first song'); </computeroutput></para>

      <para><computeroutput>insert into SONG values (20000001, 10000000, 'my
      second song');</computeroutput></para>

        <para><computeroutput>insert into PKTEST values (3,11);</computeroutput></para>

      <para>You must run the mySQL server in ANSI mode for CMP to work.</para>

      <para>Add the option ansi to your mySQL command line startup, or add it
      in the "my.ini" options file</para>

      <para>Now we can configure JAG to use this database. In the Datasource
      section set the following:</para>

      <para><itemizedlist>
          <listitem>
            <para>Set the JNDI name of the Datasource to: jdbc/CDPlayer</para>
          </listitem>

          <listitem>
            <para>Select as database type: MySQL</para>
          </listitem>

          <listitem>
            <para>Select as jdbc url: jdbc:mysql://localhost/test (in case the
            mysql runs on the same machine as the appserver).</para>
          </listitem>

          <listitem>
            <para>In the default setup the test database of MySQL doesn't need
            any username/password. So keep them empty.</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>Configure the SunOne Application Server for the
      application</title>

      <itemizedlist>
        <listitem>
          <para>Start S1AS 7 and goto the admin webpages.</para>
        </listitem>

        <listitem>
          <para>Select your server, and click on the "JVM Settings" tab Then
          select the "Path Settings". In the "Classpath suffix" add a line
          containing: </para>

          <para><computeroutput>C:\...path_to_the_my_sql_driver\mm.mysql-2.0.13-bin.jar</computeroutput>
          </para>

          <para>Save, and apply changes</para>
        </listitem>

        <listitem>
          <para>Goto the "JDBC", then "Connection Pools" and create a new one.
          JNDI name: "CDPlayerConnectionPool" </para>

          <para><computeroutput>Datasource classname: "org.gjt.mm.mysql.jd
          bc2.optional.MysqlConnectionPoolDataSource" </computeroutput>
          </para>

          <para>Set the following properties for the Connection Pool.
          <computeroutput></computeroutput></para>

          <para><computeroutput>&lt;property value="localhost"
          name="serverName/"&gt;</computeroutput></para>

          <para><computeroutput>&lt;property value="3306" name="port"&gt;
          </computeroutput></para>

          <para><computeroutput>&lt;property value="" name="user"&gt;
          </computeroutput></para>

          <para><computeroutput>&lt;property value="" name="password"&gt;
          </computeroutput></para>

          <para><computeroutput>&lt;property value="test"
          name="databaseName"&gt;</computeroutput></para>
        </listitem>

        <listitem>
          <para>Goto the "JDBC", then "JDBC Resources" and create a new one.
          <computeroutput></computeroutput></para>

          <para><computeroutput> JNDI name: "jdbc/CDPlayer" Pool name:
          "CDPlayerConnectionPool"</computeroutput></para>
        </listitem>

        <listitem>
          <para>And finally a Plugable Persistence Manger has to be created:
          Create the PPM: jdbc/CDPlayerPPM and selected the previously create
          connection pool.</para>
        </listitem>

        <listitem>
          <para>Save, apply changes &amp; stop/start server</para>
        </listitem>
      </itemizedlist>

      <para>Now the datasource have been configure, also log4j has to be added
      to the classpath of the appserver, even if the generated application
      used jdk logging because struts1-1 will need it. </para>

      <para>In the "Classpath suffix" add a line containing:
      C:\...path_to_log4j\log4j.jar</para>

      <para>Also add a -D parameter to the JVM Options that specifies a
      logging directory: -Dcom.finalist.LogDir=c:/temp</para>

      <para>If this parameter isn't set, S1AS 7 will throw Security Exceptions
      because a System properies is being set.</para>

      <para>Save, and apply changes</para>

      <para>When creating new EntityEJBs the sequence generator should be
      deployed as an EJB Module. The Sequence Generator EJB jar has been
      distributed along with jag and can be found in the lib dir of the
      generated project.</para>
    </section>

    <section>
      <title>Using JAG with the test database</title>

      <para>Now JAG can be used to create 2 entity EJBs (CD and Song) and add
      a session Facade to them. Run JAG and build the generated project</para>

      <para>One thing required by the S1AS is a database schema. This can be
      done by running the capture-schema script in the bin directory of the
      S1AS. This script will be called from the ANT build, but it may be
      necessary to put the JDBC driver in the classpath of the capture script.
      This can be done easily by adding it once to the script.</para>
    </section>

    <section>
      <title>Issues with the SunOne Application Server for the
      application</title>

      <para>For an Entity EJB the Primary key must be defined in the database
      to make it work! It is not enought to tell JAG what should be the
      primary key.</para>

      <para>MySQL can only be used in ansi mode, otherwise CMP won't work with
      S1AS.</para>

      <para>For CMR to work, both the foreign key and the primary key of the
      foreign table should have the same column name.</para>
    </section>
  </section>
</article>