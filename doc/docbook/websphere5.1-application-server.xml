<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article id="sunone">
  <articleinfo>
    <title>Websphere Application Server Support with JAG</title>

    <author>
      <firstname>Alfred</firstname>

      <surname>Foltin</surname>

      <affiliation>
        <orgname>Finalist IT Group</orgname>

        <address>
               <street>Stationsplein 45</street>,
               <postcode>3013 AK </postcode>
               <city>Rotterdam</city>,
               <country>The Netherlands</country>,
               Phone:
               <phone>+31 10 217 08 00</phone>,
               Fax:
               <fax>+31 10 280 96 20</fax>,
               Email:
               <email>alfred@finalist.com</email>
            </address>
      </affiliation>
    </author>

    <date>June 20, 2005</date>

    <revhistory>
      <revision>
        <revnumber>v0.1</revnumber>

        <date>June 20, 2005</date>

        <authorinitials>Alfred Foltin</authorinitials>

        <revdescription>
          <para>Initial version on how to use Websphere with JAG.</para>
        </revdescription>
      </revision>
    </revhistory>
  </articleinfo>

  <section>
    <title>The Webphere Application Server</title>

    <section>
      <title>Introduction</title>

      <para>
         We used the Tomcat/Hibernate/Struts template to make a one shot
         generation of our application. So JAG hasn't been tested yet for
         EJBs on Websphere.
         What follows are a couple of pointers on how to get your WSAD
         project going based on the code generated by JAG.
      </para>
    </section>

    <section>
      <title>Setting up the project structure</title>

      <para>It is advisable to have JAG generate it's code to a directory
      structure which is in line with WSAD's structure. The way to go is to
      set up your Websphere projects first and only then have JAG generate
      it's code to the respective projects. Afterwards you'll do a refresh
      and WSAD should be OK.</para>

      <para>You'll need an extra project to serve as your lib
      repository. Here you'll have to collect all required libraries. The
      lib.xml file in the /conf subdirectory of your generated application
      will give you a general idea on which jars will have to go here. In
      order to avoid classpath complications it's adviseable to have all
      utility projects (like the project containing the service layer and
      the one containing the persistence layer) have dependencies on this
      repository</para>

      <para>Once you've imported your generated projects into WSAD, the
      missing IBM specific configuration files will be generated for you and
      you should be able to deploy your application on the internal
      appserver.</para>

    </section>


  </section>
</article>
