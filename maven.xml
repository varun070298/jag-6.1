<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:j="jelly:core" xmlns:deploy="deploy" xmlns:ant="jelly:ant">
${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}

   <!-- Copy all dependent libs to the lib directory -->
   <goal name="copy.libs">
       <deploy:copy-deps todir="lib" excludes="${dist.excludes}"/>
   </goal>

   <preGoal name="site">
      <attainGoal name="docbook:transform"/>
      <attainGoal name="generate.docbook"/>
   </preGoal>

   <goal name="unzip.docbook">
      <ant:property name="docbook.xsl.version" value="1.64.1"/>
      <ant:property name="docbook.xsl.dir" value="docbook-xsl-${docbook.xsl.version}"/>
      <ant:available file="${docbook.xsl.dir}" type="dir" property="docbookdirpresent"/>
      <j:if test="${docbookdirpresent == null}">
         <!-- We need the XSL zip file. -->
         <deploy:copy-deps todir="lib" excludes="${dist.excludes}"/>
         <unzip src="lib/${docbook.xsl.dir}.zip" dest="."/>
         <!-- Stylesheets are unzipped, the zip file can be deleted now -->
      </j:if>
   </goal>


   <!-- after the prepare-bin-filesystem also copy libs and config  -->
   <postGoal name="dist:prepare-bin-filesystem">
      <j:set var="copyextra.basedir" value="${maven.dist.bin.assembly.dir}"/>
      <attainGoal name="copyextra"/>
      <attainGoal name="copyextra-bin"/>
   </postGoal>

   <!-- after the prepare-src-filesystem also copy libs and config  -->
   <postGoal name="dist:prepare-src-filesystem">
      <j:set var="copyextra.basedir" value="${maven.dist.src.assembly.dir}"/>
      <attainGoal name="copyextra"/>
      <attainGoal name="copyextra-src"/>
   </postGoal>

   <goal name="copyextra">
      <ant:copy todir="${copyextra.basedir}">
         <ant:fileset dir=".">
            <ant:include name="*.txt"/>
            <ant:exclude name="LICENCING.txt"/>
         </ant:fileset>
      </ant:copy>
      <ant:copy todir="${copyextra.basedir}/conf">
         <ant:fileset dir="conf">
            <ant:include name="*.xml"/>
            <ant:include name="*.dtd"/>
         </ant:fileset>
      </ant:copy>
      <ant:copy todir="${copyextra.basedir}/templates">
         <ant:fileset dir="templates">
            <ant:include name="**/*"/>
         </ant:fileset>
      </ant:copy>
      <ant:copy todir="${copyextra.basedir}/images">
         <ant:fileset dir="images">
            <ant:include name="**/*"/>
         </ant:fileset>
      </ant:copy>
      <ant:copy todir="${copyextra.basedir}/bin">
         <ant:fileset dir="bin">
            <ant:include name="**/*"/>
         </ant:fileset>
      </ant:copy>
      <ant:fixcrlf srcdir="${copyextra.basedir}/bin"
         eol="lf"
         eof="remove"
         includes="**/*.sh"/>
   </goal>


   <goal name="copyextra-bin">
      <deploy:copy-deps todir="${copyextra.basedir}/lib" excludes="${dist.excludes}"/>
      <ant:echo>The version of jag is: ${pom.currentVersion}</ant:echo>
      <ant:move file="${copyextra.basedir}/jag-${pom.currentVersion}.jar" tofile="${copyextra.basedir}/lib/jag.jar"/>
      <!-- The following jars are only required for docbook generation. So remove them. -->
      <ant:delete file="${copyextra.basedir}/lib/fop-0.20.5.jar"/>
      <ant:delete file="${copyextra.basedir}/lib/batik-1.1.1.jar"/>
      <ant:delete file="${copyextra.basedir}/lib/avalon-framework-4.1.5.jar"/>
      <ant:delete file="${copyextra.basedir}/lib/docbook-xsl-1.64.1.zip"/>
      <ant:delete file="${copyextra.basedir}/lib/xalan-2.5.1.jar"/>
      <ant:copy todir="${copyextra.basedir}/doc">
         <ant:fileset dir="doc">
            <ant:include name="help/**/*"/>
         </ant:fileset>
      </ant:copy>
   </goal>

   <goal name="copyextra-src">
      <ant:copy todir="${copyextra.basedir}/doc">
         <ant:fileset dir="doc" />
      </ant:copy>
   </goal>

   <goal name="generate.docbook">

      <!-- This should define the properties  -->
      <ant:property name="lib.dir" value="lib"/>
      <ant:property name="doc.dir" value="doc"/>
      <ant:property name="xdocs.dir" value="xdocs"/>
      <ant:property name="doc.dir.pdf" value="${xdocs.dir}/pdf"/>
      <ant:property name="doc.dir.html" value="${xdocs.dir}/html"/>
      <ant:property name="docbook.dir" value="${doc.dir}/docbook"/>
      <ant:property name="docbook.dir.css" value="${docbook.dir}/css"/>
      <ant:property name="docbook.images" value="${docbook.dir}/images"/>

      <ant:mkdir dir="${doc.dir.html}"/>
      <ant:mkdir dir="${doc.dir.pdf}"/>
      <ant:taskdef name="html" classpathref="maven.dependency.classpath" classname="com.finalist.ant.tasks.docbook.HTMLTask"/>
      <ant:taskdef name="pdf" classpathref="maven.dependency.classpath" classname="com.finalist.ant.tasks.docbook.PDFTask"/>
      <ant:taskdef name="param" classpathref="maven.dependency.classpath" classname="com.finalist.ant.tasks.docbook.XSLTParameterTask"/>

      <!-- Make sure the docbook stylesheets are available -->
      <attainGoal name="unzip.docbook"/>

      <ant:echo message="Docbook PDF generation"/>
      <ant:pdf xslfile="conf/docbook.xsl" outputdir="${doc.dir.pdf}">
         <fileset dir=".">
            <include name="${docbook.dir}/**/*.xml"/>
         </fileset>
         <!--
         Currently the logo file on top of the title page is hardcoded as:
         file:doc/docbook/images/logo.gif
         Should be configurable.
         -->
      </ant:pdf>

      <ant:echo message="Docbook HTML generation"/>
      <ant:html xslfile="${docbook.xsl.dir}/html/docbook.xsl" outputdir="${doc.dir.html}">
         <fileset dir=".">
            <include name="${docbook.dir}/**/*.xml"/>
         </fileset>

         <param name="html.stylesheet" value="html.css"/>
         <param name="paper.type" value="A4"/>
         <param name="section.autolabel" value="1"/>
         <param name="section.label.includes.component.label" value="1"/>
         <param name="draft.watermark.image" value=''/>
      </ant:html>
      <ant:copy file="${docbook.dir.css}/html.css" todir="${doc.dir.html}"/>
      <ant:copy toDir="${doc.dir.html}/images">
         <ant:fileset dir="${docbook.images}"/>
      </ant:copy>

   </goal>

</project>
