#if ($config.check("useJasper"))
////File: ./src/java-web/${app.RootPath}/reports/JFreeBarScriptlet.java
package ${app.RootPackage}.reports;

import net.sf.jasperreports.engine.JRDefaultScriptlet;
import net.sf.jasperreports.engine.JRScriptletException;
import net.sf.jasperreports.renderers.JCommonDrawableRenderer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

import java.awt.*;
import java.util.List;

/**
 * @author jag.
 * @version $Id: JFreeBarScriptlet.java.vsl,v 1.8 2006/03/18 15:16:16 ekkelenkamp Exp $
 */
public class JFreeBarScriptlet extends JRDefaultScriptlet {

    /**
     *
     */
    public void afterReportInit() throws JRScriptletException {
        try {
            // row keys...
            String series1 = "Entities";
            int count = 0;
            // create the dataset...
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
#if (${config.templateSettings.serviceTier} == "Spring")
            org.springframework.context.ApplicationContext context = (org.springframework.context.ApplicationContext) ReportBaseTableModel.sessionLocal.get();
#end
#foreach ($session in $sessions)
#if (${config.templateSettings.serviceTier} == "Spring")
            ${app.RootPackage}.session.I${session.Name} ${session.Name}Service = (${app.RootPackage}.session.I${session.Name}) context.getBean("${session.Name}");
#end            
#foreach ($entity in $session.Entities)
#if ("false" == $entity.getIsAssociationEntity())
#if (${config.templateSettings.serviceTier} == "ServiceLocator")
#if (${config.templateSettings.webTier} == "Tapestry 4")
            count = ${app.RootPackage}.core.${app.Name.Sentensized}Page.get${session.Name}Service().get${entity.Name}ListSize();
#end
#if (${config.templateSettings.webTier} == "Struts 1.2")
            count = ${app.RootPackage}.forms.ServiceBaseForm.get${session.Name}Service().get${entity.Name}ListSize();
#end
#else
            count = ${session.Name}Service.get${entity.Name}ListSize();
#end
            dataset.addValue(count, series1, "${entity.Name}");
#end
#end
#end
            // create the chart...
            JFreeChart chart = ChartFactory.createBarChart(
                    "JAG Entities Bar Chart",         // chart title
                    "Entity",               // domain axis label
                    "Count",                  // range axis label
                    dataset,                  // data
                    PlotOrientation.VERTICAL, // orientation
                    true,                     // include legend
                    true,                     // tooltips?
                    false                     // URLs?
            );

            // NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...

            // set the background color for the chart...
            chart.setBackgroundPaint(Color.white);

            // get a reference to the plot for further customisation...
            CategoryPlot plot = chart.getCategoryPlot();
            plot.setBackgroundPaint(Color.lightGray);
            plot.setDomainGridlinePaint(Color.white);
            plot.setDomainGridlinesVisible(true);
            plot.setRangeGridlinePaint(Color.white);

            // set the range axis to display integers only...
            final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
            rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

            CategoryAxis domainAxis = plot.getDomainAxis();
            domainAxis.setCategoryLabelPositions(
                CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 6.0)
            );
            

            /*   */
            this.setVariableValue("Chart", new JCommonDrawableRenderer(chart));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


}
#end