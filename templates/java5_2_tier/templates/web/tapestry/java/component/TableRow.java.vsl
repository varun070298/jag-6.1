#*  Copyright (C) 2006 Finalist IT Group

    This file is part of JAG - the Java J2EE Application Generator

    JAG is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
    JAG is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with JAG; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    Author: Onno Scheffers, Piraya (http://www.piraya.nl)
*#
#if (${config.templateSettings.webTier} == "Tapestry 4")
////File: ./src/java-web/${app.RootPath}/component/TableRow.java
/*
 * Copyright (c) 2005 Your Corporation. All Rights Reserved.
 */
package ${app.RootPackage}.component;

import org.apache.tapestry.AbstractComponent;
import org.apache.tapestry.IMarkupWriter;
import org.apache.tapestry.IRequestCycle;
import org.apache.tapestry.annotations.ComponentClass;
import org.apache.tapestry.annotations.Parameter;

/**
 * Renders a tableRow that will toggle its style for each row that is being rendered.
 *
 * @author  $config.authorText  $config.companyText
 * @version $Revision: 1.3 $, $Date: 2006/01/20 13:10:17 $
 */
@ComponentClass(allowBody = true, allowInformalParameters = true, reservedParameters = "class")
public abstract class TableRow extends AbstractComponent {
   /** A String-array of all css-styles that should be iterater over. */
   public static final String[] TABLEROW_STYLES = { "odd", "even" };

   /** {@inheritDoc} */
   @Override
   protected void renderComponent(
         IMarkupWriter writer, IRequestCycle cycle) {
      writer.begin("tr");
      int currentIndex = getCurrentIndex();
      writer.attribute("class", TABLEROW_STYLES[currentIndex % TABLEROW_STYLES.length]);
      renderInformalParameters(writer, cycle);
      renderBody(writer, cycle);
      writer.end();
   }

   /**
    * Retrieves the index of the tablerow that is currently being rendered.
    *
    * @return The index of the tablerow that is currently being rendered.
    */
   @Parameter(required = true)
   public abstract int getCurrentIndex();
}
#end